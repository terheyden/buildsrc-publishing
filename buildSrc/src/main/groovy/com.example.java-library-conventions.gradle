/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Apply the common convention plugin for shared build configuration between library and application projects.
    id 'com.example.java-common-conventions'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    // Support for publishing to Maven repositories.
    id 'maven-publish'
    // For signing uploaded artifacts.
    id 'signing'
}

ext {
    githubScmUrl = "scm:git:git://github.com/example/"
    githubHttpUrl = "https://github.com/example/"
    sonatypePublishUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
}

publishing {
    publications {

        // Create a MavenPublication called "mavenJava".
        // https://docs.gradle.org/current/userguide/publishing_maven.html
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version
            from components.java

            // Use resolved versions when exposing 'api' dependencies.
            // (Plays nicely with Maven.)
            versionMapping {
                usage("java-api") {
                    fromResolutionOf("runtimeClasspath")
                }
                usage("java-runtime") {
                    fromResolutionResult()
                }
            }

            String githubScmUrl = project.ext.githubScmUrl
            String githubHttpUrl = project.ext.githubHttpUrl
            String projectUrl = "${githubHttpUrl}${project.name}"

            // Add metadata to the generated POM:
            pom {
                groupId = project.group
                artifactId = project.name
                description = project.description
                url = projectUrl

                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        id = "example"
                        name = "Luke T"
                        email = "example@gmail.com"
                    }
                }

                scm {
                    connection = "${githubScmUrl}${project.name}.git"
                    developerConnection = "${githubScmUrl}#${project.name}.git"
                    url = projectUrl
                }
            }
        }
    }

    repositories {

        String sonatypeUsername = System.getenv("SONATYPE_USERNAME") ?: "admin"
        String sonatypePwd = System.getenv("SONATYPE_PASSWORD") ?: "admin"
        String sonatypeUrl = uri(
            System.getenv("SONATYPE_URL")
                ?: project.ext.sonatypePublishUrl)

        maven {
            name = "Sonatype"
            url = sonatypeUrl
            credentials {
                username = sonatypeUsername
                password = sonatypePwd
            }
        }
    }
}
